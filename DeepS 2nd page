<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stock Evaluation Metrics</title>
    <!-- Google Fonts: Roboto for general text, Roboto Mono for code/math -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&family=Roboto+Mono:wght@400;500&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* Define CSS Variables for easy theme management */
        :root {
            --primary-color: #2E7D32; /* Darker green for better contrast */
            --primary-light: #4CAF50; /* Lighter green for accents */
            --secondary-color: #1565C0; /* Darker blue for better contrast */
            --secondary-light: #2196F3; /* Lighter blue for accents */
            --background-light: #f8fafc; /* Very light background */
            --background-dark: #e8edf2; /* Slightly darker background for math section */
            --text-color: #2d3748; /* Darker grey for better readability */
            --text-light: #4a5568; /* Lighter text */
            --border-color: #e2e8f0; /* Very light grey for borders */
            --shadow-light: rgba(0, 0, 0, 0.05); /* Very light shadow */
            --shadow-medium: rgba(0, 0, 0, 0.1); /* Medium shadow */
            --error-color: #D32F2F; /* Darker red for better contrast */
            --success-color: #388E3C; /* Darker green for better contrast */
            --warning-color: #F57C00; /* Darker amber for better contrast */
            --card-radius: 12px; /* Consistent border radius */
            --transition: all 0.2s ease-in-out; /* Smooth transitions */
        }

        /* Basic Body Styling */
        body {
            font-family: 'Roboto', sans-serif;
            max-width: 1200px;
            margin: 20px auto;
            padding: 0;
            background: var(--background-light);
            color: var(--text-color);
            line-height: 1.5;
            box-sizing: border-box;
        }

        /* Main container for content */
        .container {
            background: white;
            border-radius: var(--card-radius);
            box-shadow: 0 4px 20px var(--shadow-light);
            overflow: hidden;
            margin-bottom: 20px;
        }

        /* Header styling */
        .header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 25px 30px;
            text-align: center;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .header h1 {
            margin: 0;
            font-size: 2.2rem;
            font-weight: 700;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .header p {
            margin: 10px 0 0;
            font-weight: 300;
            opacity: 0.9;
            font-size: 1rem;
        }

        /* Main content area */
        .content {
            padding: 25px 30px;
        }

        /* Input section */
        .input-section {
            display: flex;
            gap: 30px;
            margin-bottom: 25px;
            flex-wrap: wrap;
        }

        .input-column {
            flex: 1;
            min-width: 250px;
        }

        /* Form Input Group Styling */
        .input-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text-color);
            font-size: 0.95rem;
        }

        .input-wrapper {
            position: relative;
            display: flex;
            align-items: center;
        }

        .input-wrapper i {
            position: absolute;
            left: 12px;
            color: var(--text-light);
            font-size: 0.9rem;
        }

        input[type="text"],
        input[type="number"] {
            width: 100%;
            padding: 12px 15px 12px 35px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            font-size: 0.95rem;
            box-sizing: border-box;
            transition: var(--transition);
            background: var(--background-light);
        }

        input[type="text"]:focus,
        input[type="number"]:focus {
            border-color: var(--secondary-light);
            box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.1);
            outline: none;
        }

        /* Button Styling */
        button {
            background-color: var(--primary-color);
            color: white;
            padding: 14px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            width: 100%;
            margin-top: 10px;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        button:hover {
            background-color: var(--primary-color);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(46, 125, 50, 0.2);
        }

        button:active {
            transform: translateY(0);
        }

        /* Table styling */
        .evaluation-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            font-size: 0.95rem;
            box-shadow: 0 2px 10px var(--shadow-light);
            border-radius: var(--card-radius);
            overflow: hidden;
        }

        .evaluation-table th,
        .evaluation-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid var(--border-color);
        }

        .evaluation-table th {
            background-color: var(--primary-light);
            color: white;
            font-weight: 500;
        }

        .evaluation-table tr:nth-child(even) {
            background-color: var(--background-light);
        }

        .evaluation-table tr:hover {
            background-color: rgba(33, 150, 243, 0.05);
        }

        /* Score indicators */
        .score-2 {
            background-color: rgba(56, 142, 60, 0.2);
            font-weight: bold;
            color: var(--success-color);
        }

        .score-1 {
            background-color: rgba(255, 193, 7, 0.2);
            font-weight: bold;
            color: var(--warning-color);
        }

        .score-0 {
            background-color: rgba(211, 47, 47, 0.2);
            font-weight: bold;
            color: var(--error-color);
        }

        /* Recommendation styling */
        .recommendation {
            font-weight: bold;
            text-align: center;
            padding: 5px;
            border-radius: 4px;
        }

        .strong-buy {
            background-color: rgba(56, 142, 60, 0.3);
            color: var(--success-color);
        }

        .buy {
            background-color: rgba(56, 142, 60, 0.2);
            color: var(--success-color);
        }

        .weak-buy {
            background-color: rgba(255, 193, 7, 0.2);
            color: var(--warning-color);
        }

        .not-recommended {
            background-color: rgba(255, 193, 7, 0.3);
            color: var(--warning-color);
        }

        .do-not-buy {
            background-color: rgba(211, 47, 47, 0.2);
            color: var(--error-color);
        }

        .strong-not-buy {
            background-color: rgba(211, 47, 47, 0.3);
            color: var(--error-color);
        }

        /* Summary section */
        .summary-section {
            margin-top: 30px;
            padding: 20px;
            background: white;
            border-radius: var(--card-radius);
            box-shadow: 0 2px 10px var(--shadow-light);
        }

        .summary-section h2 {
            color: var(--secondary-color);
            margin-top: 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .summary-metrics {
            display: flex;
            justify-content: space-around;
            margin-top: 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .summary-metric {
            text-align: center;
            min-width: 120px;
        }

        .summary-metric h3 {
            color: var(--text-light);
            font-size: 0.9rem;
            margin-bottom: 5px;
        }

        .summary-metric p {
            font-size: 1.4rem;
            font-weight: 600;
            margin: 0;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .header {
                padding: 20px;
            }
            
            .header h1 {
                font-size: 1.8rem;
            }
            
            .content {
                padding: 20px;
            }
            
            .input-section {
                flex-direction: column;
                gap: 20px;
            }
            
            .evaluation-table {
                font-size: 0.85rem;
            }
            
            .evaluation-table th,
            .evaluation-table td {
                padding: 8px 10px;
            }
        }

        @media (max-width: 480px) {
            .summary-metrics {
                flex-direction: column;
                align-items: center;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1><i class="fas fa-chart-line"></i> Stock Evaluation Metrics</h1>
            <p>Comprehensive analysis of stock fundamentals and valuation</p>
        </div>

        <div class="content">
            <div class="input-section">
                <div class="input-column">
                    <div class="input-group">
                        <label for="symbol">Stock Symbol <span class="tooltip"><i class="fas fa-info-circle"></i><span class="tooltiptext">Enter the stock ticker symbol (e.g., AAPL for Apple)</span></span></label>
                        <div class="input-wrapper">
                            <i class="fas fa-chart-line"></i>
                            <input type="text" id="symbol" placeholder="e.g., AAPL">
                        </div>
                    </div>

                    <button onclick="loadStockData()"><i class="fas fa-search"></i> Analyze Stock</button>
                </div>
            </div>

            <div id="results-section">
                <table class="evaluation-table">
                    <thead>
                        <tr>
                            <th>Step</th>
                            <th>Action</th>
                            <th>Good if</th>
                            <th>Score</th>
                            <th>Where</th>
                            <th>Meaning</th>
                            <th>Recommendation</th>
                        </tr>
                    </thead>
                    <tbody id="metrics-body">
                        <!-- Metrics will be populated here by JavaScript -->
                    </tbody>
                </table>

                <div class="summary-section">
                    <h2><i class="fas fa-chart-pie"></i> Summary Evaluation</h2>
                    <div class="summary-metrics">
                        <div class="summary-metric">
                            <h3>Total Score</h3>
                            <p id="total-score">-</p>
                        </div>
                        <div class="summary-metric">
                            <h3>Max Possible</h3>
                            <p id="max-score">26</p>
                        </div>
                        <div class="summary-metric">
                            <h3>Percentage</h3>
                            <p id="percentage">-</p>
                        </div>
                        <div class="summary-metric">
                            <h3>Overall Rating</h3>
                            <p id="overall-rating">-</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const API_KEY = "d0kuab9r01qhb02558rgd0kuab9r01qhb02558s0";
        
        // Sample data structure for evaluation metrics
        const evaluationMetrics = [
            {
                step: 1,
                action: "Price Chart",
                goodIf: "1 year, 5 years - Growth",
                score: 1,
                where: "Overview",
                meaning: "N/A",
                recommendation: "STRONG BUY"
            },
            {
                step: 2,
                action: "Financial Indicators",
                goodIf: "Growth",
                score: 2,
                where: "Overview",
                meaning: "Revenue and profit growth",
                recommendation: "Buy"
            },
            {
                step: 3,
                action: "Forward P/E",
                goodIf: "Below sector average",
                score: 2,
                where: "Overview+Sector",
                meaning: "Price relative to earnings",
                recommendation: "Weak Buy"
            },
            {
                step: 4,
                action: "P/B Ratio",
                goodIf: "Less than 1, or around 1",
                score: 0,
                where: "Financials->Ratios",
                meaning: "Price relative to book value",
                recommendation: "Not Recommended"
            },
            {
                step: 5,
                action: "PEG Ratio",
                goodIf: "Less than 1, or around 1",
                score: 1,
                where: "Financials->Ratios",
                meaning: "Price relative to growth",
                recommendation: "Do Not Buy"
            },
            {
                step: 6,
                action: "Debt/Equity Ratio",
                goodIf: "Less than 1, or around 1",
                score: 2,
                where: "Financials->Ratios",
                meaning: "Financial leverage",
                recommendation: "STRONG NOT BUY"
            },
            {
                step: 7,
                action: "ROE",
                goodIf: "+13% or more, at least 10%",
                score: 2,
                where: "Financials->Ratios",
                meaning: "Return on equity",
                recommendation: "Buy"
            },
            {
                step: 8,
                action: "Free Cash Flow",
                goodIf: "Growth, or at least stability",
                score: 1,
                where: "Financials->Cash Flow",
                meaning: "Cash generation",
                recommendation: "Weak Buy"
            },
            {
                step: 9,
                action: "EPS Growth",
                goodIf: "+X%, or at least stability",
                score: 2,
                where: "Financials->Income",
                meaning: "Earnings growth",
                recommendation: "Buy"
            },
            {
                step: 10,
                action: "Shares Change (YoY)",
                goodIf: "-X%, or at least 0",
                score: 2,
                where: "Financials->Income",
                meaning: "Share dilution",
                recommendation: "Buy"
            },
            {
                step: 11,
                action: "Dividend Growth",
                goodIf: "Exists and growing",
                score: 2,
                where: "Financials->Income",
                meaning: "Shareholder returns",
                recommendation: "Buy"
            },
            {
                step: 12,
                action: "Forecast",
                goodIf: "+X% in low forecast",
                score: 1,
                where: "Forecast",
                meaning: "Analyst expectations",
                recommendation: "Weak Buy"
            },
            {
                step: 13,
                action: "News",
                goodIf: "Positive, no lawsuits",
                score: 0,
                where: "Overview",
                meaning: "Company sentiment",
                recommendation: "Not Recommended"
            }
        ];

        function loadStockData() {
            const symbol = document.getElementById('symbol').value.trim();
            if (!symbol) {
                alert('Please enter a stock symbol');
                return;
            }

            // In a real implementation, we would fetch actual data from Finnhub API
            // For this example, we'll use the sample data
            populateMetricsTable(evaluationMetrics);
            calculateSummary(evaluationMetrics);
        }

        function populateMetricsTable(metrics) {
            const tbody = document.getElementById('metrics-body');
            tbody.innerHTML = '';

            metrics.forEach(metric => {
                const row = document.createElement('tr');
                
                // Determine score class
                let scoreClass = '';
                if (metric.score === 2) scoreClass = 'score-2';
                else if (metric.score === 1) scoreClass = 'score-1';
                else if (metric.score === 0) scoreClass = 'score-0';

                // Determine recommendation class
                let recClass = '';
                const recText = metric.recommendation.toLowerCase();
                if (recText.includes('strong buy')) recClass = 'strong-buy';
                else if (recText.includes('buy')) recClass = 'buy';
                else if (recText.includes('weak buy')) recClass = 'weak-buy';
                else if (recText.includes('not recommended')) recClass = 'not-recommended';
                else if (recText.includes('do not buy')) recClass = 'do-not-buy';
                else if (recText.includes('strong not buy')) recClass = 'strong-not-buy';

                row.innerHTML = `
                    <td>${metric.step}</td>
                    <td>${metric.action}</td>
                    <td>${metric.goodIf}</td>
                    <td class="${scoreClass}">${metric.score}</td>
                    <td>${metric.where}</td>
                    <td>${metric.meaning}</td>
                    <td class="recommendation ${recClass}">${metric.recommendation}</td>
                `;
                tbody.appendChild(row);
            });
        }

        function calculateSummary(metrics) {
            const totalScore = metrics.reduce((sum, metric) => sum + metric.score, 0);
            const maxScore = 26; // Based on the maximum possible score in the sample data
            const percentage = Math.round((totalScore / maxScore) * 100);
            
            let overallRating = '';
            if (percentage >= 80) overallRating = 'STRONG BUY';
            else if (percentage >= 60) overallRating = 'BUY';
            else if (percentage >= 40) overallRating = 'WEAK BUY';
            else if (percentage >= 20) overallRating = 'NOT RECOMMENDED';
            else overallRating = 'STRONG NOT BUY';

            document.getElementById('total-score').textContent = totalScore;
            document.getElementById('percentage').textContent = `${percentage}%`;
            document.getElementById('overall-rating').textContent = overallRating;
            
            // Add class to overall rating
            const overallElement = document.getElementById('overall-rating');
            overallElement.className = '';
            if (overallRating.includes('STRONG BUY')) overallElement.classList.add('strong-buy');
            else if (overallRating.includes('BUY')) overallElement.classList.add('buy');
            else if (overallRating.includes('WEAK BUY')) overallElement.classList.add('weak-buy');
            else if (overallRating.includes('NOT RECOMMENDED')) overallElement.classList.add('not-recommended');
            else if (overallRating.includes('STRONG NOT BUY')) overallElement.classList.add('strong-not-buy');
        }

        // Initialize with sample data
        document.addEventListener('DOMContentLoaded', () => {
            populateMetricsTable(evaluationMetrics);
            calculateSummary(evaluationMetrics);
        });
    </script>
</body>
</html>
